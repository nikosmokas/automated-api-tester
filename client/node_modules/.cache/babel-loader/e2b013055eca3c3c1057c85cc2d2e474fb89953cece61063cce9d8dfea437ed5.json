{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\Java\\\\Automated API Tester\\\\automated-api-tester\\\\client\\\\src\\\\comps\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/comps/Login.js\n\nimport React, { useState } from \"react\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setLoggedIn\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post(\"/api/login\", {\n        email: formData.email,\n        password: formData.password\n      });\n\n      // Assuming login is successful and response.data contains token\n      localStorage.setItem(\"token\", response.data.token);\n      setLoggedIn(true); // Update state to indicate user is logged in\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      setLoginError(\"Invalid credentials. Please try again.\");\n    }\n  };\n\n  // Redirect to home page if user is logged in\n  if (localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  const togglePasswordVisibility = () => {\n    setPasswordShown(!passwordShown);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Required\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"password-container\",\n        children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: passwordShown ? \"text\" : \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Required\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: togglePasswordVisibility,\n          children: passwordShown ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Jx6ygb994ZCnKtUWYqLhBnssInI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","Navigate","axios","jsxDEV","_jsxDEV","Login","setLoggedIn","_s","formData","setFormData","email","password","passwordShown","setPasswordShown","loginError","setLoginError","handleChange","event","target","name","value","handleSubmit","preventDefault","response","post","localStorage","setItem","data","token","error","console","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","togglePasswordVisibility","className","children","onSubmit","type","onChange","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["E:/Desktop/Java/Automated API Tester/automated-api-tester/client/src/comps/Login/Login.js"],"sourcesContent":["// src/comps/Login.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ setLoggedIn }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"/api/login\", {\r\n        email: formData.email,\r\n        password: formData.password,\r\n      });\r\n\r\n      // Assuming login is successful and response.data contains token\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      setLoggedIn(true); // Update state to indicate user is logged in\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      setLoginError(\"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Redirect to home page if user is logged in\r\n  if (localStorage.getItem(\"token\")) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2>Login</h2>\r\n        {loginError && <p className=\"error-message\">{loginError}</p>}\r\n        <label>\r\n          Email <span className=\"required\">*</span>:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Required\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"password-container\">\r\n          Password <span className=\"required\">*</span>:\r\n          <input\r\n            type={passwordShown ? \"text\" : \"password\"}\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Required\"\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={togglePasswordVisibility}>\r\n            {passwordShown ? \"Hide\" : \"Show\"}\r\n          </button>\r\n        </label>\r\n        <button type=\"submit\">Login</button>\r\n        <p>\r\n          Don't have an account? <Link to=\"/register\">Register here</Link>.\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}